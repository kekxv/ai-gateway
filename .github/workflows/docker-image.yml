name: Release and Publish Docker Image

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required to check for existing tags

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Check version and determine if release is needed
      id: version_check
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        if git rev-parse "v$VERSION" >/dev/null 2>&1; then
          echo "Tag v$VERSION already exists. No new release needed."
          echo "release_needed=false" >> $GITHUB_OUTPUT
        else
          echo "Version v$VERSION is new. Proceeding with release."
          echo "release_needed=true" >> $GITHUB_OUTPUT
        fi

    - name: Create and push Git tag
      if: steps.version_check.outputs.release_needed == 'true'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v${{ steps.version_check.outputs.version }}" -m "Release v${{ steps.version_check.outputs.version }}"
        git push origin "v${{ steps.version_check.outputs.version }}"

    - name: Set up QEMU
      if: steps.version_check.outputs.release_needed == 'true'
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      if: steps.version_check.outputs.release_needed == 'true'
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      if: steps.version_check.outputs.release_needed == 'true'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      if: steps.version_check.outputs.release_needed == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:v${{ steps.version_check.outputs.version }}
          ghcr.io/${{ github.repository }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max